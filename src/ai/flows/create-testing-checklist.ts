// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Generates a checklist of critical items to check during pump testing.
 *
 * - createTestingChecklist - A function that generates the checklist.
 * - CreateTestingChecklistInput - The input type for the createTestingChecklist function.
 * - CreateTestingChecklistOutput - The return type for the createTestingChecklist function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CreateTestingChecklistInputSchema = z.object({
  pumpModel: z.string().describe('The model of the pump being tested.'),
  customer: z.string().describe('The customer who ordered the pump.'),
  serialNumber: z.string().describe('The serial number of the pump.'),
  poNumber: z.string().describe('The purchase order number for the pump.'),
});
export type CreateTestingChecklistInput = z.infer<typeof CreateTestingChecklistInputSchema>;

const CreateTestingChecklistOutputSchema = z.object({
  checklist: z.array(
    z.string().describe('A specific item to check during pump testing.')
  ).describe('A list of critical items to check during testing.'),
});
export type CreateTestingChecklistOutput = z.infer<typeof CreateTestingChecklistOutputSchema>;

export async function createTestingChecklist(input: CreateTestingChecklistInput): Promise<CreateTestingChecklistOutput> {
  return createTestingChecklistFlow(input);
}

const prompt = ai.definePrompt({
  name: 'createTestingChecklistPrompt',
  input: {schema: CreateTestingChecklistInputSchema},
  output: {schema: CreateTestingChecklistOutputSchema},
  prompt: `You are an expert pump technician. You will create a checklist of critical items to check during the testing of a pump.

Pump Model: {{{pumpModel}}}
Customer: {{{customer}}}
Serial Number: {{{serialNumber}}}
PO Number: {{{poNumber}}}

Create a detailed checklist of items to verify and tests to run to ensure the pump is functioning correctly and meets quality standards. Return a numbered list.`,
});

const createTestingChecklistFlow = ai.defineFlow(
  {
    name: 'createTestingChecklistFlow',
    inputSchema: CreateTestingChecklistInputSchema,
    outputSchema: CreateTestingChecklistOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
